import * as _ from "./runtime";
export type T = { aString: string; aInt: number; aFloat: number; aBool: boolean; aByte: number; aIntPtr: number | null; aIntSlice: Array<number>; aIntMap: { [k: string]: number }; aByteSlice: string; aint2: number; };
export function empty(): T { return { aString: "", aInt: 0, aFloat: 0.0, aBool: false, aByte: 0, aIntPtr: null, aIntSlice: [], aIntMap: {}, aByteSlice: "", aint2: 0 }; }
export type MarshalT = { aString: string; aInt: number; aFloat: number; aBool: boolean; aByte: number; aIntPtr: number | null; aIntSlice: Array<number>; aIntMap: { [k: string]: number }; aByteSlice: string | null; AInt2: number; };
export function marshal(x: T): MarshalT { return (function(x) { return { aString: _.identityString(x.aString), aInt: _.identityNumber(x.aInt), aFloat: _.identityNumber(x.aFloat), aBool: _.identityBoolean(x.aBool), aByte: _.identityNumber(x.aByte), aIntPtr: ((f) => (x) => x !== null ? f(x) : null)(_.identityNumber)(x.aIntPtr), aIntSlice: _.fmapArray(_.identityNumber)(x.aIntSlice), aIntMap: _.fmapObject(_.identityNumber)(x.aIntMap), aByteSlice: window.btoa(x.aByteSlice), AInt2: _.identityNumber(x.aint2) }; })(x); }
export function unmarshal(x: MarshalT): T { return (function(x) { return { aString: (x.hasOwnProperty("aString") ? _.identityString(x.aString) : ""), aInt: (x.hasOwnProperty("aInt") ? _.identityNumber(x.aInt) : 0), aFloat: (x.hasOwnProperty("aFloat") ? _.identityNumber(x.aFloat) : 0.0), aBool: (x.hasOwnProperty("aBool") ? _.identityBoolean(x.aBool) : false), aByte: (x.hasOwnProperty("aByte") ? _.identityNumber(x.aByte) : 0), aIntPtr: (x.hasOwnProperty("aIntPtr") ? ((f) => (x) => x !== null ? f(x) : null)(_.identityNumber)(x.aIntPtr) : null), aIntSlice: (x.hasOwnProperty("aIntSlice") ? _.fmapArray(_.identityNumber)(x.aIntSlice) : []), aIntMap: (x.hasOwnProperty("aIntMap") ? _.fmapObject(_.identityNumber)(x.aIntMap) : {}), aByteSlice: (x.hasOwnProperty("aByteSlice") ? _.bytesUnmarshal(x.aByteSlice) : ""), aint2: _.identityNumber(x.AInt2) }; })(x); }
